/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: messages.proto */

#ifndef PROTOBUF_C_messages_2eproto__INCLUDED
#define PROTOBUF_C_messages_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Gameprotocol__Hello Gameprotocol__Hello;
typedef struct Gameprotocol__AddPlayer Gameprotocol__AddPlayer;
typedef struct Gameprotocol__GetPlayerList Gameprotocol__GetPlayerList;
typedef struct Gameprotocol__PlayerList Gameprotocol__PlayerList;
typedef struct Gameprotocol__Player Gameprotocol__Player;


/* --- enums --- */


/* --- messages --- */

/*
 * Message Hello - simple vérification de présence
 */
struct  Gameprotocol__Hello
{
  ProtobufCMessage base;
  /*
   * Version du protocole
   */
  uint32_t version;
};
#define GAMEPROTOCOL__HELLO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gameprotocol__hello__descriptor) \
    , 0 }


/*
 * Message AddPlayer - ajouter un joueur au serveur de jeu
 */
struct  Gameprotocol__AddPlayer
{
  ProtobufCMessage base;
  uint32_t player_id;
  char *username;
};
#define GAMEPROTOCOL__ADD_PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gameprotocol__add_player__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


/*
 * Message GetPlayerList - demander la liste des joueurs
 */
struct  Gameprotocol__GetPlayerList
{
  ProtobufCMessage base;
};
#define GAMEPROTOCOL__GET_PLAYER_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gameprotocol__get_player_list__descriptor) \
     }


/*
 * Message PlayerList - réponse avec la liste des joueurs
 */
struct  Gameprotocol__PlayerList
{
  ProtobufCMessage base;
  size_t n_players;
  Gameprotocol__Player **players;
};
#define GAMEPROTOCOL__PLAYER_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gameprotocol__player_list__descriptor) \
    , 0,NULL }


/*
 * Structure Player utilisée dans PlayerList
 */
struct  Gameprotocol__Player
{
  ProtobufCMessage base;
  uint32_t player_id;
  char *username;
};
#define GAMEPROTOCOL__PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gameprotocol__player__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


/* Gameprotocol__Hello methods */
void   gameprotocol__hello__init
                     (Gameprotocol__Hello         *message);
size_t gameprotocol__hello__get_packed_size
                     (const Gameprotocol__Hello   *message);
size_t gameprotocol__hello__pack
                     (const Gameprotocol__Hello   *message,
                      uint8_t             *out);
size_t gameprotocol__hello__pack_to_buffer
                     (const Gameprotocol__Hello   *message,
                      ProtobufCBuffer     *buffer);
Gameprotocol__Hello *
       gameprotocol__hello__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gameprotocol__hello__free_unpacked
                     (Gameprotocol__Hello *message,
                      ProtobufCAllocator *allocator);
/* Gameprotocol__AddPlayer methods */
void   gameprotocol__add_player__init
                     (Gameprotocol__AddPlayer         *message);
size_t gameprotocol__add_player__get_packed_size
                     (const Gameprotocol__AddPlayer   *message);
size_t gameprotocol__add_player__pack
                     (const Gameprotocol__AddPlayer   *message,
                      uint8_t             *out);
size_t gameprotocol__add_player__pack_to_buffer
                     (const Gameprotocol__AddPlayer   *message,
                      ProtobufCBuffer     *buffer);
Gameprotocol__AddPlayer *
       gameprotocol__add_player__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gameprotocol__add_player__free_unpacked
                     (Gameprotocol__AddPlayer *message,
                      ProtobufCAllocator *allocator);
/* Gameprotocol__GetPlayerList methods */
void   gameprotocol__get_player_list__init
                     (Gameprotocol__GetPlayerList         *message);
size_t gameprotocol__get_player_list__get_packed_size
                     (const Gameprotocol__GetPlayerList   *message);
size_t gameprotocol__get_player_list__pack
                     (const Gameprotocol__GetPlayerList   *message,
                      uint8_t             *out);
size_t gameprotocol__get_player_list__pack_to_buffer
                     (const Gameprotocol__GetPlayerList   *message,
                      ProtobufCBuffer     *buffer);
Gameprotocol__GetPlayerList *
       gameprotocol__get_player_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gameprotocol__get_player_list__free_unpacked
                     (Gameprotocol__GetPlayerList *message,
                      ProtobufCAllocator *allocator);
/* Gameprotocol__PlayerList methods */
void   gameprotocol__player_list__init
                     (Gameprotocol__PlayerList         *message);
size_t gameprotocol__player_list__get_packed_size
                     (const Gameprotocol__PlayerList   *message);
size_t gameprotocol__player_list__pack
                     (const Gameprotocol__PlayerList   *message,
                      uint8_t             *out);
size_t gameprotocol__player_list__pack_to_buffer
                     (const Gameprotocol__PlayerList   *message,
                      ProtobufCBuffer     *buffer);
Gameprotocol__PlayerList *
       gameprotocol__player_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gameprotocol__player_list__free_unpacked
                     (Gameprotocol__PlayerList *message,
                      ProtobufCAllocator *allocator);
/* Gameprotocol__Player methods */
void   gameprotocol__player__init
                     (Gameprotocol__Player         *message);
size_t gameprotocol__player__get_packed_size
                     (const Gameprotocol__Player   *message);
size_t gameprotocol__player__pack
                     (const Gameprotocol__Player   *message,
                      uint8_t             *out);
size_t gameprotocol__player__pack_to_buffer
                     (const Gameprotocol__Player   *message,
                      ProtobufCBuffer     *buffer);
Gameprotocol__Player *
       gameprotocol__player__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gameprotocol__player__free_unpacked
                     (Gameprotocol__Player *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Gameprotocol__Hello_Closure)
                 (const Gameprotocol__Hello *message,
                  void *closure_data);
typedef void (*Gameprotocol__AddPlayer_Closure)
                 (const Gameprotocol__AddPlayer *message,
                  void *closure_data);
typedef void (*Gameprotocol__GetPlayerList_Closure)
                 (const Gameprotocol__GetPlayerList *message,
                  void *closure_data);
typedef void (*Gameprotocol__PlayerList_Closure)
                 (const Gameprotocol__PlayerList *message,
                  void *closure_data);
typedef void (*Gameprotocol__Player_Closure)
                 (const Gameprotocol__Player *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor gameprotocol__hello__descriptor;
extern const ProtobufCMessageDescriptor gameprotocol__add_player__descriptor;
extern const ProtobufCMessageDescriptor gameprotocol__get_player_list__descriptor;
extern const ProtobufCMessageDescriptor gameprotocol__player_list__descriptor;
extern const ProtobufCMessageDescriptor gameprotocol__player__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_messages_2eproto__INCLUDED */
